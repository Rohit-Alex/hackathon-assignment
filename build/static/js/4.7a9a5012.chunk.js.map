{"version":3,"sources":["assets/images/dashboard/circle.svg","app/dashboard/Dashboard.js"],"names":["module","exports","defaultVisitScaleOptions","scales","yAxes","ticks","beginAtZero","display","min","stepSize","max","gridLines","drawBorder","color","zeroLineColor","xAxes","padding","fontColor","autoSkip","categoryPercentage","barPercentage","legend","elements","point","radius","Dashboard","useState","cardDetails","setCardDetails","setIsLoading","visitSaleData","setVisitSaleData","visitSaleOptions","trafficData","setTrafficData","getApiData","finalData","getDashboardData","data","mountHelperFunction","ctx","document","getElementById","getContext","gradientBar1","createLinearGradient","addColorStop","gradientBar2","gradientBar3","gradientBar4","gradientdonut1","gradientdonut2","gradientdonut3","gradientdonut4","newVisitSaleData","labels","datasets","map","e","idx","label","cardTitle","borderColor","backgroundColor","hoverBackgroundColor","legendColor","pointRadius","fill","borderWidth","graphData","newTrafficData","useEffect","className","aria-label","aria-current","length","key","additionalClass","src","require","alt","style","fontSize","fontWeight","cardValue","cardStats","id","options","responsive","animation","animateScale","animateRotate","value"],"mappings":"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","file":"static/js/4.7a9a5012.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/circle.1541da91.svg\";","import React, { useEffect, useState } from \"react\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport { getDashboardData } from \"../basic-ui/ApiCalls\";\nimport { CardShimmerEffect } from \"../Shimmer/CardShimmer\";\nimport './dashboard.scss'\n\nconst defaultVisitScaleOptions = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          display: false,\n          min: 0,\n          stepSize: 20,\n          max: 80,\n        },\n        gridLines: {\n          drawBorder: false,\n          color: \"rgba(235,237,242,1)\",\n          zeroLineColor: \"rgba(235,237,242,1)\",\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n          drawBorder: false,\n          color: \"rgba(0,0,0,1)\",\n          zeroLineColor: \"rgba(235,237,242,1)\",\n        },\n        ticks: {\n          padding: 20,\n          fontColor: \"#9c9fa6\",\n          autoSkip: true,\n        },\n        categoryPercentage: 0.5,\n        barPercentage: 0.5,\n      },\n    ],\n  },\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n};\n\n\nconst Dashboard = () => {\n  const [cardDetails, setCardDetails] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [visitSaleData, setVisitSaleData] = useState({});\n  const visitSaleOptions = defaultVisitScaleOptions;\n  const [trafficData, setTrafficData] = useState({});\n  const trafficOptions = {\n    responsive: true,\n    animation: {\n      animateScale: true,\n      animateRotate: true,\n    },\n    legend: false,\n  };\n\n  \n  const getApiData = async () => {\n    setIsLoading(true);\n    let finalData = [];\n    try {\n      const data = await getDashboardData();\n      setCardDetails(data);\n      finalData[0] = data\n    } catch (err) {\n      finalData[1] = err\n    } finally {\n      setIsLoading(false);\n      return finalData;\n    }\n  };\n\n  const mountHelperFunction = async () => {\n    const data = await getApiData();\n    let ctx = document.getElementById(\"visitSaleChart\")?.getContext(\"2d\");\n    if (ctx) {\n      let gradientBar1 = ctx.createLinearGradient(0, 0, 0, 281);\n      gradientBar1.addColorStop(0, \"rgba(254, 124, 150, 1)\");\n      gradientBar1.addColorStop(1, \"rgba(255, 205, 150, 1)\");\n\n      let gradientBar2 = ctx.createLinearGradient(0, 0, 0, 490);\n      gradientBar2.addColorStop(0, \"rgba(69, 202, 252, 1)\");\n      gradientBar2.addColorStop(1, \"rgba(48, 63, 159, 1)\");\n\n      let gradientBar3 = ctx.createLinearGradient(0, 0, 0, 250);\n      gradientBar3.addColorStop(0, \"rgba(6, 185, 157, 1)\");\n      gradientBar3.addColorStop(1, \"rgba(132, 217, 210, 1)\");\n\n      let gradientBar4 = ctx.createLinearGradient(0, 0, 0, 280);\n      gradientBar4.addColorStop(0, \"rgba(218, 140, 255, 1)\");\n      gradientBar4.addColorStop(1, \"rgba(154, 85, 255, 1)\");\n\n      let gradientdonut1 = ctx.createLinearGradient(0, 0, 0, 180);\n      gradientdonut1.addColorStop(0, \"rgba(254, 124, 150, 1)\");\n      gradientdonut1.addColorStop(1, \"rgba(255, 205, 150, 1)\");\n\n      let gradientdonut2 = ctx.createLinearGradient(0, 0, 0, 400);\n      gradientdonut2.addColorStop(0, \"rgba(69, 202, 252, 1)\");\n      gradientdonut2.addColorStop(1, \"rgba(48, 63, 159, 1)\");\n\n      let gradientdonut3 = ctx.createLinearGradient(0, 0, 0, 250);\n      gradientdonut3.addColorStop(0, \"rgba(6, 185, 157, 1)\");\n      gradientdonut3.addColorStop(1, \"rgba(132, 217, 210, 1)\");\n\n      let gradientdonut4 = ctx.createLinearGradient(0, 0, 0, 180);\n      gradientdonut4.addColorStop(0, \"rgba(218, 140, 255, 1)\");\n      gradientdonut4.addColorStop(1, \"rgba(154, 85, 255, 1)\");\n\n      const newVisitSaleData = {\n        labels: [\n          \"MONDAY\",\n          \"TUESDAY\",\n          \"WEDNESDAY\",\n          \"THURSDAY\",\n          \"FRIDAY\",\n          \"SATURDAY\",\n          \"SUNDAY\",\n        ],\n        datasets: data?.[0].map((e, idx) => ({\n          label: e.cardTitle,\n          borderColor:\n            idx === 0\n              ? gradientBar1\n              : idx === 1\n              ? gradientBar2\n              : idx === 2\n              ? gradientBar3\n              : gradientBar4,\n          backgroundColor:\n            idx === 0\n              ? gradientBar1\n              : idx === 1\n              ? gradientBar2\n              : idx === 2\n              ? gradientBar3\n              : gradientBar4,\n          hoverBackgroundColor:\n            idx === 0\n              ? gradientBar1\n              : idx === 1\n              ? gradientBar2\n              : idx === 2\n              ? gradientBar3\n              : gradientBar4,\n          legendColor:\n            idx === 0\n              ? gradientBar1\n              : idx === 1\n              ? gradientBar2\n              : idx === 2\n              ? gradientBar3\n              : gradientBar4,\n          pointRadius: 0,\n          fill: false,\n          borderWidth: 1,\n          data: e.graphData,\n        })),\n      };\n\n      const newTrafficData = {\n        datasets: [\n          {\n            data: [40, 20, 10, 30],\n            backgroundColor: [\n              gradientdonut1,\n              gradientdonut2,\n              gradientdonut3,\n              gradientdonut4,\n            ],\n            hoverBackgroundColor: [\n              gradientdonut1,\n              gradientdonut2,\n              gradientdonut3,\n              gradientdonut4,\n            ],\n            borderColor: [\n              gradientdonut1,\n              gradientdonut2,\n              gradientdonut3,\n              gradientdonut4,\n            ],\n            legendColor: [\n              gradientdonut1,\n              gradientdonut2,\n              gradientdonut3,\n              gradientdonut4,\n            ],\n          },\n        ],\n\n        // These labels appear in the legend and in the tooltips when hovering different arcs\n        labels: data.map((e) => e.label),\n      };\n      setVisitSaleData(newVisitSaleData);\n      setTrafficData(newTrafficData);\n    }\n  };\n\n  useEffect(() => {\n    mountHelperFunction();\n  }, []);\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">\n          <span className=\"page-title-icon bg-gradient-primary text-white mr-2\">\n            <i className=\"mdi mdi-home\"></i>\n          </span>{\" \"}\n          Dashboard{\" \"}\n        </h3>\n        <nav aria-label=\"breadcrumb\">\n          <ul className=\"breadcrumb\">\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              <span></span>Overview{\" \"}\n              <i className=\"mdi mdi-alert-circle-outline icon-sm text-primary align-middle\"></i>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      {/* FIRST ROW  */}\n      <div className=\"row\">\n        {cardDetails.length && cardDetails.map((e, idx) => (\n          <div className=\"col-md-3 stretch-card grid-margin\" key={idx}>\n            {/* <CardShimmerEffect /> */}\n            <div\n              className={`card ${e.additionalClass} card-img-holder text-white`}\n            >\n              <div className=\"card-body\">\n                <img\n                  src={require(\"../../assets/images/dashboard/circle.svg\")}\n                  className=\"card-img-absolute\"\n                  alt=\"circle\"\n                />\n                <h4\n                  className=\"font-weight-normal mb-3 text-light \"\n                  style={{ fontSize: \"20px\", fontWeight: \"300\" }}\n                >\n                  {e.cardTitle}{\" \"}\n                  <i className=\"mdi mdi-chart-line mdi-24px float-right text-light\"></i>\n                </h4>\n                <h2 className=\"mb-5 text-light\">{e.cardValue}</h2>\n                <h6 className=\"card-text text-light\">{e.cardStats}</h6>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* SECOND ROW  */}\n      {cardDetails.length ? (\n      <div className=\"row\">\n        <div className=\"col-md-7 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"clearfix mb-4\">\n                <h4 className=\"card-title float-left\">Graphics Stats</h4>\n                <div\n                  id=\"visit-sale-chart-legend\"\n                  className=\"rounded-legend legend-horizontal legend-top-right float-right\"\n                >\n                  <ul>\n                    {cardDetails.length && cardDetails.map((e, idx) => (\n                      <li key={idx}>\n                        <span\n                          className={`legend-dots ${e.additionalClass}`}\n                        ></span>\n                        {e.label}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              <Bar\n                className=\"chartLegendContainer\"\n                data={visitSaleData}\n                options={visitSaleOptions}\n                id=\"visitSaleChart\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-md-5 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Traffic Sources</h4>\n              <Doughnut data={trafficData} options={trafficOptions} />\n              <div\n                id=\"traffic-chart-legend\"\n                className=\"rounded-legend legend-vertical legend-bottom-left pt-4\"\n              >\n                <ul>\n                  {cardDetails.map((e, idx) => (\n                    <li key={idx}>\n                      <span\n                        className={`legend-dots ${e.additionalClass}`}\n                      ></span>\n                      {e.label}\n                      <span className=\"float-right\">{e.value}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}